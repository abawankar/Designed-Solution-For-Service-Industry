@model IEnumerable<D.UserInterFace.Areas.ATM.Models.TaskManagerModel>

@{
    ViewBag.Title = "TimeAndCostReport";
}

<style type="text/css">
   .tb
    {
        text-align:right;
        border: 1px solid #989494;
        background-color: #f9f6f6;
        padding:4px;
        color:#000000;
    }
    .tf
    {
        padding:4px;
        border:1px solid #989494;
        color:#fff;
        font-weight:bold;
        background-color:#808080;
        text-align:center;
    }

    .footer
    {
        padding:4px;
        border:1px solid #989494;
        color:#fff;
        background-color:#808080;
        text-align:right;
    }
    .alignleft
    {
        text-align:left;
    }
</style>


<h3>Time and Cost Report</h3>

<table>
    <thead>
        <tr>
            <td class="tf">Job#</td>
            <td class="tf">Client Name</td>
            <td class="tf">Assigner</td>
            <td class="tf">Assigne</td>
            <td class="tf">Task Description</td>
            <td class="tf">Notes</td>
            <td class="tf">Start Date</td>
            <td class="tf">End Date</td>
            <td class="tf">Actual Hours</td>
            <td class="tf">Cost Per Hour</td>
            <td class="tf">Total Cost</td>
            <td class="tf">Other Cost</td>
            <td class="tf">Grand Total</td>
        </tr>
    </thead>
    <tbody>
        @{TimeSpan time = new TimeSpan();}
        @foreach (var item in Model.OrderBy(x=>x.Start))
        {
          <tr>
              <td class="tb">@item.JobNumber</td>
              <td class="tb">@item.ClientName</td>
              <td class="tb">@item.Assigneer.EmpName</td>
              <td class="tb">
                  @foreach (var cont in item.Contacts)
                  {
                      @cont.EmpName
                  }
              </td>
              <td class="tb" style="text-align:left;width:200px;">@item.Task</td>
              <td class="tb">@item.Notes</td>
              <td class="tb">@Convert.ToDateTime(item.Start).ToString("dd MMM yyyy")</td>
              <td class="tb">@Convert.ToDateTime(item.Compl).ToString("dd MMM yyyy")</td>
              <td class="tb">@item.ActualHours</td>
              <td class="tb">@Convert.ToDouble(item.EmpCost).ToString("##0.00")</td>
              <td class="tb">@Convert.ToDouble(item.TotalCost).ToString("##,##0.00")</td>
              <td class="tb">@Convert.ToDouble(item.OtherCost).ToString("##,##0.00")</td>
              <td class="tb">@Convert.ToDouble(item.GrandTotal).ToString("##,##0.00")</td>
          </tr>
            if (!string.IsNullOrEmpty(item.ActualHours)) {
                string[] ts = item.ActualHours.Split(':');
                //time = time.Add(new TimeSpan(Convert.ToInt32(ts[0]), Convert.ToInt32(ts[1]), 0));
            }
            
        }
    </tbody>
    <tfoot>
        <tr>
            <td class="tf" colspan="8">Total</td>
            <td class="tf" style="text-align:right;">@time.ToString()</td>
            <td class="tf"></td>
            <td class="tf" style="text-align:right;">@Convert.ToDouble(Model.Sum(x=>x.TotalCost)).ToString("##,##0.00")</td>
            <td class="tf" style="text-align:right;">@Convert.ToDouble(Model.Sum(x=>x.OtherCost)).ToString("##,##0.00")</td>
            <td class="tf" style="text-align:right;">@Convert.ToDouble(Model.Sum(x=>x.GrandTotal)).ToString("##,##0.00")</td>
        </tr>
    </tfoot>
</table>
